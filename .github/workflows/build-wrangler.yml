name: Build wrangler

on:
  workflow_call:
    inputs:
      wranglerPackage:
        required: true
        type: string
    secrets:
      cachixToken:
        required: false

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: x86_64-linux
            os: ubuntu-latest
          - name: aarch64-linux
            os: ubuntu-24.04-arm
          - name: aarch64-darwin
            os: macos-latest
          - name: x86_64-darwin
            os: macos-13

    name: 'Build'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ inputs.wranglerPackage }}-${{ matrix.name }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ inputs.wranglerPackage }}-${{ matrix.name }}-
          gc-max-store-size-linux: 2G
      - uses: cachix/cachix-action@v16
        env:
          cachixAuth: ${{ secrets.cachixToken }}
        if: ${{ env.cachixAuth }}
        with:
          name: wrangler
          authToken: '${{ secrets.cachixToken }}'
          skipPush: ${{ github.event_name == 'pull_request' || github.event_name == 'merge_group' }}
      - name: Build
        run: nix build -L .#packages.${{ matrix.name }}.${{ inputs.wranglerPackage }}
        env:
          NIX_PATH: nixpkgs=channel:nixpkgs-unstable
      - name: Version check
        run: ./result/bin/wrangler -v

