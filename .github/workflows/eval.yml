name: "Eval"

on:
  push:
    branches:
      - master
  workflow_call:
    secrets:
      CACHIX_AUTH_TOKEN:
        required: true

jobs:
  changes:
    name: Package Changes
    runs-on: ubuntu-latest
    outputs:
      flake: ${{ steps.changes.outputs.flake }}
      src: ${{ steps.changes.outputs.src }}
      wranglerLatest: ${{ steps.changes.outputs.wranglerLatest }}
      wrangler3: ${{ steps.changes.outputs.wrangler3 }}
      workerd: ${{ steps.changes.outputs.workerd }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            flake:
              - 'flake.nix'
              - 'flake.lock'
            src:
              - 'pkgs/wrangler/generic.nix'
            wranglerLatest:
              - 'pkgs/wrangler/4_x.nix'
            wrangler3:
              - 'pkgs/wrangler/3_x.nix'
            workerd:
              - 'pkgs/bazel_8/**'
              - 'pkgs/workerd/**'
  nixExprs:
    name: Nix Exprs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Check
        run: nix flake check -L --no-build
  format:
    name: Format
    needs: nixExprs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Check formatting
        run: nix fmt -- -c .
  devShelldefault:
    name: 'devShells / Build default'
    needs: nixExprs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Build
        run: nix build .#devShells.x86_64-linux.default
  packagesWrangler:
    name: 'Packages (wrangler)'
    needs:
      - changes
      - nixExprs
    if: ${{ needs.changes.outputs.flake == 'true' || needs.changes.outputs.src == 'true' || needs.changes.outputs.wranglerLatest == 'true' }}
    uses: ./.github/workflows/build-wrangler.yml
    with:
      wranglerPackage: wrangler
    secrets:
      cachixToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
  packagesWrangler3:
    name: 'Packages (wrangler_3)'
    needs:
      - changes
      - nixExprs
    if: ${{ needs.changes.outputs.flake == 'true' || needs.changes.outputs.src == 'true' || needs.changes.outputs.wrangler3 == 'true' }}
    uses: ./.github/workflows/build-wrangler.yml
    with:
      wranglerPackage: wrangler_3
  packagesWorkerd:
    name: 'Packages (workerd)'
    needs:
      - changes
      - nixExprs
    if: ${{ needs.changes.outputs.workerd == 'true' }}
    uses: ./.github/workflows/build-workerd.yml
